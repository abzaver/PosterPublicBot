name: Deploy PosterPublicBot to Amazon ECS

on:
  push:
    branches: [ "master" ]

env:
  ECR_REGISTRY: ${{ vars.AWS_ECR_REGISTRY }}
  ECR_REPO: ${{ vars.AWS_ECR_REPO }}
  IMAGE_VERSION: ${{ github.run_number }}
  REGION: ${{ secrets.AWS_REGION }}

jobs:
  BuildTestPublish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12]
    steps:
      - name: Checkout the source code
        uses: actions/checkout@v3
    
      - name: Set Up Python Environment.
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
  
      - name: Install application Dependencies.
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
  
      - name: Build + Tag Image.
        run: docker build --build-arg TLG_TOKEN=${{ secrets.TLG_TOKEN }} -t ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPO }}:${{ env.IMAGE_VERSION }} -f Dockerfile .

      
      - name: Configure AWS Credentials
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.REGION }}
  
      - name: Publish Docker Image.
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          aws ecr get-login-password --region ${{ env.REGION }} | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}
          docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPO }}:${{ env.IMAGE_VERSION }}
